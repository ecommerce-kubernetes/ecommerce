pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/ecommerce-kubernetes/ecommerce.git'
        BRANCH = 'develop'
        TARGET_DIR = 'discovery-service'
        SSH_CREDENTIALS_ID = 'ansible-key'
        REMOTE_HOST = '172.18.0.11'
        REMOTE_USER = 'root'
        REMOTE_PATH = '/ansible/playbooks/discovery-playbook'
    }

    triggers {
        // GitHub webhook이 작동하지 않을 때 Poll SCM 백업
        pollSCM('H/2 * * * *')
    }

    stages {
        stage('SCM Checkout (with Sparse Path)') {
            steps {
                echo '📥 discovery-service 디렉토리만 sparse checkout 중...'

                checkout([$class: 'GitSCM',
                    branches: [[name: "*/${BRANCH}"]],
                    userRemoteConfigs: [[
                        url: "${GIT_REPO}",
                        credentialsId: 'github_access_token'
                    ]],
                    extensions: [
                        [$class: 'SparseCheckoutPaths',
                            sparseCheckoutPaths: [[path: "${TARGET_DIR}"]]
                        ],
                        [$class: 'CleanCheckout']
                    ]
                ])
            }
        }

        stage('Gradle Build') {
            steps {
                echo '⚙️ Gradle 빌드 시작'
                dir("${TARGET_DIR}") {
                    sh '''
                        chmod +x gradlew
                        ./gradlew clean build
                    '''
                }
            }
        }

        stage('Copy to Ansible Server') {
            steps {
                echo '🚚 Ansible 서버로 JAR 파일 복사 중...'
                script {
                    def jarFiles = findFiles(glob: "${TARGET_DIR}/build/libs/*.jar")
                    def targetJar = jarFiles.find { file ->
                        !file.name.contains("plain") && file.name.endsWith(".jar")
                    }

                    if (targetJar) {
                        echo "📦 복사할 JAR 파일: ${targetJar.name}"
                        sshagent (credentials: ["${SSH_CREDENTIALS_ID}"]) {
                            sh """
                                scp -o StrictHostKeyChecking=no ${targetJar.path} ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/
                            """
                        }
                    } else {
                        error("❌ plain이 아닌 JAR 파일을 찾을 수 없습니다.")
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                echo '🚀 Ansible 플레이북 실행 중...'
                sshagent (credentials: ["${SSH_CREDENTIALS_ID}"]) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} \\
                        'ansible-playbook -i /ansible/inventory/hosts /ansible/playbooks/discovery-playbook/discovery-playbook.yml'
                    """
                }
            }
        }
    }

    post {
        success {
            echo '✅ discovery-service 배포 완료!'
        }
        failure {
            echo '❌ 빌드 또는 배포 실패!'
        }
    }
}